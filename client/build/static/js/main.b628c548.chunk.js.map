{"version":3,"sources":["components/user-list/userListItem.js","components/user-list/userSearchBar.js","utils/eventEmitter.js","api_services/serverApiCallService.js","components/user-list/userList.js","components/error-list/errorListItem.js","components/error-list/errorList.js","components/create-error-modal/errorFormInput.js","components/create-error-modal/errorCreateForm.js","components/create-error-modal/createErrorModal.js","App.js","serviceWorker.js","index.js"],"names":["UserListItem","props","react_default","a","createElement","List","Item","className","id","onClick","onItemClick","Image","avatar","src","anonymous_id","user_id","email","created_at","UserSearchBar","handleKeyPress","event","key","_this","handleSearch","style","width","onKeyPress","this","Segment","Grid","columns","stackable","textAlign","Divider","vertical","Row","verticalAlign","Column","Header","as","Input","placeholder","name","icon","value","searchParams","onChange","handleChange","Component","EventEmitter","subscribers","subscribersNum","subscribe","eventName","callback","subscribersList","subscribtionId","push","fn","unsubscribe","j","jl","length","publish","params","i","il","serverApiCallService","subUsersListUpdate","pubCallback","subsErroListUpdate","eventUnsub","subid","fetchUserList","_fetchUserList","Object","asyncToGenerator","regenerator_default","mark","_callee","responceCallback","responce","wrap","_context","prev","next","axios","get","sent","data","stop","_x","_x2","apply","arguments","fetchErrorList","_fetchErrorList","_callee2","page","_context2","_x3","_x4","_x5","createErrorDoc","_createErrorDoc","_callee3","reqBody","_context3","post","isNewUser","_x6","_x7","UserList","state","users","usersCount","userSubUpdateId","user","history","pathname","handleSearchChange","objectSpread","target","setState","searchUserByParams","userList","componentDidMount","updateUserList","onPageChange","e","_ref","activePage","componentWillUnmount","usersItemArr","map","userListItem","assign","userSearchBar","Pagination","defaultActivePage","totalPages","Math","ceil","ErrorListItem","imageSrc","concat","err_type","errMessageElem","flexGrow","overflow","err_message","Popup","trigger","content","height","overflowWrap","wordBreak","position","on","inverted","ErrorList","errors","errorsDocCount","errorSubUpdateId","anonId","updateErroList","location","match","matchId","errorList","errorDocs","errorsCount","_ref2","errorItemArr","error","errorListItem","_id","Link","to","ErrorFormInput","Form","fluid","label","ErrorForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newState","handleSubmit","userParams","response","status","onSubmit","errorFormInput","Button","type","ErrorModal","paddingTop","Modal","size","Content","image","errorCreateForm","App","Container","createErrorModal","BrowserRouter","Switch","Route","path","component","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b628c548.chunk.js","sourcesContent":["import React from 'react';\nimport { List, Image } from 'semantic-ui-react'\nimport '../../css/userlist.css'\n\nfunction UserListItem(props) {\n    return   <List.Item>\n                <div className=\"list-item\" id=\"userlist\" onClick={props.onItemClick}>\n                    <div><Image avatar src='/images/user.png'/></div>\n                    <div><b>anonymous_id:</b>{props.anonymous_id}</div>\n                    <div><b>user_id:</b>{props.user_id}</div>\n                    <div><b>email:</b>{props.email}</div>\n                    <div><b>created_at:</b>{props.created_at}</div>\n                </div>\n            </List.Item>\n}\n\nexport default UserListItem;","import React, { Component } from 'react';\nimport { Input, Segment, Grid, Divider, Header } from 'semantic-ui-react'\n\n\nclass UserSearchBar extends Component {\n\n  handleKeyPress = (event) => {\n    if(event.key === 'Enter') {\n      this.props.handleSearch();\n    }\n  }\n\n  render() {\n    return (\n      <div style={{width:'50%'}} onKeyPress={this.handleKeyPress}>\n          <Segment >\n            <Grid columns={2} stackable textAlign='center'>\n                <Divider vertical>Or</Divider>\n                <Grid.Row verticalAlign='middle'>\n                    <Grid.Column>\n                        <Header as='h3'>email</Header>\n                        <Input placeholder='email' name='email'  icon='search' value={this.props.searchParams.email} onChange={this.props.handleChange}/>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Header as='h3'>user_id</Header>\n                        <Input placeholder='user_id' name='user_id'  icon='search' value={this.props.searchParams.user_id} onChange={this.props.handleChange}/>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n          </Segment>\n      </div>\n\n    );\n  }\n}\n\nexport default UserSearchBar;\n","\nconst EventEmitter = {\n\n    subscribers:{},\n    subscribersNum:0,\n\n    subscribe: ( eventName, callback ) => {\n\n        EventEmitter.subscribersNum ++;\n    \n        const subscribersList = EventEmitter.subscribers[ eventName ] || [];\n        const subscribtionId = subscribersList.push({ id: EventEmitter.subscribersNum, fn: callback });\n        EventEmitter.subscribers[ eventName ] = subscribersList;\n\n        return subscribtionId;\n    \n    },\n\n    unsubscribe:( subscribtionId )=> {\n\n        for ( let eventName in EventEmitter.subscribers ) {\n            const subscribersList = EventEmitter.subscribers[ eventName ];\n            \n            for ( let j = 0, jl = subscribersList.length; j < jl; j ++ ) {\n                if ( subscribersList[ j ].id === subscribtionId ) {\n\n                    subscribersList[ j ] = false;\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    publish:( eventName, params ) => {\n\n        const subscribersList = EventEmitter.subscribers[ eventName ] || [];\n        for ( let i = 0, il = subscribersList.length; i < il; i ++ ) {\n            if ( subscribersList[ i ] ) {\n                subscribersList[ i ].fn( params );\n            }\n        }\n    }\n\n}\n\nexport default EventEmitter;","import axios from 'axios';\nimport EventEmitter from '../utils/eventEmitter';\n\nconst serverApiCallService = {\n\n    // Event Subscire \n    subUsersListUpdate:(pubCallback)=>{\n        return EventEmitter.subscribe('newuser', pubCallback);\n    },\n\n    subsErroListUpdate:(pubCallback)=>{\n        return EventEmitter.subscribe('newerror', pubCallback);\n    },\n\n    eventUnsub:(subid)=>{\n        EventEmitter.unsubscribe(subid);\n    },\n    // FETCH GET API\n    fetchUserList:async (searchParams,responceCallback)=> {\n        const responce = await axios.get('/api/users',{\n            params:searchParams\n        });\n        responceCallback(responce.data);\n    },\n\n    fetchErrorList:async(anonymous_id, page, responceCallback)=>{\n        const responce = await axios.get('/api/errors/'+anonymous_id,{\n            params:{\n                page\n            }\n        });\n        responceCallback(responce.data);\n    },\n    // POST API\n    createErrorDoc:async (reqBody, responceCallback)=>{\n\n        const responce = await axios.post('/api/errors', reqBody);\n        responceCallback(responce);\n\n        if(responce.data.isNewUser){\n            EventEmitter.publish('newuser');\n        }\n\n        EventEmitter.publish('newerror',responce.data.anonymous_id);\n\n    }\n\n}\n\nexport default serverApiCallService;","import React, { Component } from 'react';\nimport { List, Header, Pagination } from 'semantic-ui-react';\nimport UserListItem from './userListItem';\nimport UserSearchBar from './userSearchBar';\nimport serverApiCallService from '../../api_services/serverApiCallService';\n\nclass UserList extends Component {\n\n    state = {\n        users:[],\n        usersCount:0,\n        searchParams:{\n            user_id:'',\n            email:'',\n            page:1\n        }\n    }\n\n    userSubUpdateId = null;\n\n    onItemClick = (user)=>{\n        return ()=>{\n            this.props.history.push({pathname:'/errorlist/'+user.anonymous_id, state:{user}});\n        }\n    }\n\n    handleSearchChange = (event)=> {\n        const searchParams = {...this.state.searchParams}\n        searchParams[event.target.name] = event.target.value;\n        this.setState({searchParams});\n    }\n\n    searchUserByParams = ()=>{\n        serverApiCallService.fetchUserList({...this.state.searchParams},(userList)=>{\n            this.setState({users:userList.users, usersCount:userList.usersCount});\n        });\n    }\n\n    componentDidMount = ()=>{\n        const updateUserList = () => serverApiCallService.fetchUserList({...this.state.searchParams},(userList)=>{\n            this.setState({users:userList.users, usersCount:userList.usersCount});\n        });\n        updateUserList();\n        this.userSubUpdateId = serverApiCallService.subUsersListUpdate(updateUserList);\n    }\n\n    onPageChange = async (e,{activePage}) =>{\n        const searchParams = {...this.state.searchParams}\n        searchParams.page = activePage;\n        await this.setState({searchParams});\n\n        serverApiCallService.fetchUserList({...this.state.searchParams},(userList)=>{\n            this.setState({users:userList.users, usersCount:userList.usersCount});\n        });\n    }\n\n    componentWillUnmount = ()=>{\n        serverApiCallService.eventUnsub(this.userSubUpdateId);\n    }\n\n    render() {\n      const users = this.state.users;  \n      const onItemClick = this.onItemClick;\n      const usersItemArr = users.map((user)=>{\n          return <UserListItem {...user} key={user.anonymous_id} onItemClick={onItemClick(user)}/>      \n      });\n      return (\n        <div>\n           <Header as='h2'>User List</Header>\n           <UserSearchBar searchParams={this.state.searchParams} handleChange={this.handleSearchChange} handleSearch={this.searchUserByParams}/>\n           <List>\n               {usersItemArr}\n           </List>\n           <Pagination defaultActivePage={1} totalPages={Math.ceil(this.state.usersCount/10)} onPageChange={this.onPageChange} />\n        </div>\n        );\n    }\n  }\n  \nexport default UserList;","import React from 'react';\nimport { List, Image, Popup } from 'semantic-ui-react'\n\nfunction ErrorListItem(props) {\n    const imageSrc = `/images/${props.err_type}.png`;\n    const errMessageElem = (<div style={{flexGrow:'3', overflow:'hidden'}}><b>err_message:</b>{props.err_message}</div>);\n    return   <List.Item>\n                <div className=\"list-item\" onClick={props.onItemClick}>\n                    <div><Image avatar src={imageSrc}/> {props.created_at}</div>\n                    <Popup \n                        trigger={errMessageElem} \n                        content={<div style={\n                                    {\n                                        width:'500px', \n                                        height:'auto',\n                                        overflowWrap: 'break-word',\n                                        wordBreak: 'break-all'\n                                    }\n                                        }>\n                        {props.err_message}</div>} \n                        position='bottom center'\n                        on='click' inverted/>\n                </div>\n            </List.Item>\n}\n\nexport default ErrorListItem;","import React, { Component } from 'react';\nimport { List, Header, Pagination, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport ErrorListItem from './errorListItem';\nimport serverApiCallService from '../../api_services/serverApiCallService';\n\n\nclass ErrorList extends Component {\n\n    state={\n        errors:[],\n        errorsDocCount:0,\n        page:1\n    }\n\n    errorSubUpdateId = null;\n    user = {};\n\n    componentDidMount= async()=> {\n\n        this.user = this.props.history.location.state.user;\n    \n        const anonId = this.props.match.params.anonymous_id;\n\n        const updateErroList = (matchId) => {\n            if(matchId===anonId)\n            serverApiCallService.fetchErrorList(anonId, this.state.page, (errorList) => {\n                this.setState({\n                    errors: errorList.errorDocs, errorsDocCount: errorList.errorsCount\n                });\n            })\n        }\n\n        updateErroList(anonId);\n\n        this.errorSubUpdateId = serverApiCallService.subsErroListUpdate(updateErroList);\n\n    }\n\n    componentWillUnmount = ()=>{\n        serverApiCallService.eventUnsub(this.errorSubUpdateId);\n    }\n\n    onPageChange = async (e,{activePage}) =>{\n     \n        await this.setState({page:activePage});\n        const anonId = this.props.match.params.anonymous_id;\n        serverApiCallService.fetchErrorList(anonId,this.state.page,(errorList)=>{\n            this.setState({\n                errors: errorList.errorDocs, errorsDocCount: errorList.errorsCount\n            });\n        });\n    }\n\n    render() {\n\n      const errors = this.state.errors;  \n      const errorItemArr = errors.map((error)=>{\n          return <ErrorListItem {...error} key={error._id}/>      \n      });\n    \n      return (\n        <div>\n           <Header as='h2'>Error List</Header>\n           <Link to=\"/userlist\">Userlist</Link>\n           <div className=\"list-item\" >\n                    <div><Image avatar src='/images/user.png'/></div>\n                    <div><b>anonymous_id:</b>{this.user.anonymous_id}</div>\n                    <div><b>user_id:</b>{this.user.user_id}</div>\n                    <div><b>email:</b>{this.user.email}</div>\n            </div>\n           <List>\n               {errorItemArr}\n           </List>\n           <Pagination defaultActivePage={1} totalPages={Math.ceil(this.state.errorsDocCount/10)} onPageChange={this.onPageChange} />\n        </div>\n        );\n    }\n  }\n  \nexport default ErrorList;","import React from 'react';\nimport { Form } from 'semantic-ui-react'\n\nfunction ErrorFormInput(props) {\n    return <Form.Input fluid label={props.name} value={props.value} placeholder={props.name} name={props.name} onChange={props.handleChange} />\n}\n\nexport default ErrorFormInput;","import React, { Component } from 'react';\nimport { Button, Form, Segment } from 'semantic-ui-react';\nimport ErrorFormInput from './errorFormInput';\nimport serverApiCallService from '../../api_services/serverApiCallService';\n\n\nclass ErrorForm extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            anonymous_id:'',\n            err_type:'',\n            err_message:'',\n            email:'',\n            user_id:''\n        }\n    }\n    handleChange = (event)=> {\n        const newState = {...this.state}\n        newState[event.target.name] = event.target.value;\n        this.setState(newState);\n    }\n\n    handleSubmit = ()=>{\n    \n        const reqBody = {\n            userParams:{\n                anonymous_id:this.state.anonymous_id,\n                email:this.state.email,\n                user_id:this.state.user_id\n            },\n            err_type: this.state.err_type,\n            err_message:this.state.err_message\n        }\n\n        serverApiCallService.createErrorDoc(reqBody, (response)=>{\n            if (response.status === 200) {\n                this.setState({\n                    anonymous_id: '',\n                    err_type: '',\n                    err_message: '',\n                    email: '',\n                    user_id: ''\n                })\n            }\n        });\n    }\n\n    render() {\n      return (\n        <div style={{width:'100%'}}>\n        <Segment >\n        <Form onSubmit={this.handleSubmit}>\n          <ErrorFormInput name={'anonymous_id'} value={this.state.anonymous_id} handleChange={this.handleChange}></ErrorFormInput>\n          <ErrorFormInput name={'err_type'} value={this.state.err_type}  handleChange={this.handleChange}></ErrorFormInput>\n          <ErrorFormInput name={'err_message'} value={this.state.err_message}  handleChange={this.handleChange}></ErrorFormInput>\n          <hr/>\n          <ErrorFormInput name={'user_id'} value={this.state.user_id}  handleChange={this.handleChange}></ErrorFormInput>\n          <ErrorFormInput name={'email'} value={this.state.email}  handleChange={this.handleChange}></ErrorFormInput>\n\n          <Button type='submit'>Submit</Button>\n        </Form>\n      </Segment>\n      </div>\n      );\n    }\n  }\n  \n  export default ErrorForm;","import React, { Component } from 'react';\nimport { Button, Modal } from 'semantic-ui-react';\nimport ErrorForm from './errorCreateForm';\n\nclass ErrorModal extends Component {\n    render() {\n      return (\n        <div style={{paddingTop:'10px'}}>\n        <Modal trigger={<Button>Create Error</Button>} size={'tiny'}>\n        <Modal.Content image>\n            <ErrorForm></ErrorForm>\n        </Modal.Content>\n        </Modal>\n        </div>\n      );\n    }\n  }\n  \n  export default ErrorModal;","import React, { Component } from 'react';\nimport { Divider,Container } from 'semantic-ui-react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport UserList from './components/user-list/userList';\nimport ErrorList from './components/error-list/errorList';\n\nimport './App.css';\nimport './css/listItem.css'\n\n\nimport ErrorModal from './components/create-error-modal/createErrorModal';\n\n\nclass App extends Component {\n  render() {\n    return (\n        <Container>\n          <ErrorModal></ErrorModal>\n          <Divider></Divider>\n          <Router>\n            <div>\n              <Switch>\n                <Route path=\"/userlist\" component={UserList} />\n                <Route path=\"/errorlist/:anonymous_id\" component={ErrorList} />\n                <Route component={UserList} />\n              </Switch>\n              {/* <Redirect from=\"/\" to=\"/userlist\" exact/> */}\n\n            </div>\n          </Router>\n        </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}